/* Bracket Print resides under the LGPL v3 Copyright (c) 2020 Robert Steckroth, Bust0ut <RobertSteckroth@gmail.com>

Bracket print is a printing and logging tool for javascript engines which supplies literal ECMA Object serialization.

 this file is a part of Bracket Print

 Bracket Print is free software: you can redistribute it and/or modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 Bracket Print is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */

/* Generated by Brace_UMD 0.8.7 */
if('function'!=typeof define)var define=require('amdefine')(module);define([],function(){return function(e){if('object'!=typeof e)return!!console.log('Brace prototype must be passed an Object to assign additional members.')||e;var t={},r={};Object.getOwnPropertyNames(e).forEach(function(e){t[e]=null});var n=function(e){if(this.hasOwnProperty(e)){if('function'==typeof Object.getPrototypeOf)return!!Object.getPrototypeOf(this)[e]&&delete this[e]||!0;for(var t=this.__proto__;t;t=t.__proto__)if(e in t)return delete this[e]||!0}return!1};return e.clear=function(){if(!arguments.length){for(var e in t)n.call(this,e);for(var e in r)n.call(this,e)}for(var i in arguments)arguments[i]in t||arguments[i]in r?n.call(this,arguments[i]):console.log('The qualifier',arguments[i],'was passed to a brace prototype instance which does not have it listed.','You should either: insert the qualifier to the constructor Object parameter or add the qualifier with the add_qualifier member.')},e.extend=function(e){return Object.getOwnPropertyNames(e).forEach(function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(this,t,r)},this),this},e.proto_extend=function(t){return Object.getOwnPropertyNames(t).forEach(function(e){var r=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(this,e,r)},e),e},e.add_qualifier=function(r){t[r]=null,e[r]=e[r]||null},e.add_hidden_qualifier=function(t){r[t]=null,e[t]=e[t]||null},e.remove_qualifier=function(e){delete t[e]},e.list=function(){return t},e}});